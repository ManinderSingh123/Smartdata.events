definitions:
  steps:
    - step: &build-only
       name: check build & image
       deployment: ENG
       services: 
        - docker
       caches:
        - docker
       script:
        - export IMAGE_TAG_VERSION=$APP_VERSION.$MAINTENANCE_VERSION.$BITBUCKET_BUILD_NUMBER
        - docker build -f Redmap.Events/Dockerfile -t $AWS_ECR_IMAGE-$ENV .
        - docker tag $AWS_ECR_IMAGE-$ENV $AWS_ECR_IMAGE-$ENV:$IMAGE_TAG_VERSION
        - docker images
    - step: &build-deploy
       name: eng build & deploy 
       deployment: ENG
       services: 
        - docker
       caches:
        - docker
       script:
        - set -e 
        - curl "https://s3.amazonaws.com/aws-cli/awscli-bundle.zip" -o "awscli-bundle.zip"
        - unzip awscli-bundle.zip
        - ./awscli-bundle/install -b ~/bin/aws
        - export PATH=~/bin:$PATH
        - eval $(aws ecs get-login --region ${AWS_DEFAULT_REGION} --no-include-email) 
        - eval $(aws logs create-log-group --log-group-name /ecs/events-$ENV-service)
        - export IMAGE_TAG_VERSION=$APP_VERSION.$MAINTENANCE_VERSION.$BITBUCKET_BUILD_NUMBER
        - docker build -f Redmap.Events/Dockerfile -t $AWS_ECR_IMAGE-$ENV .
        - docker tag $AWS_ECR_IMAGE-$ENV $AWS_ECR_IMAGE-$ENV:$IMAGE_TAG_VERSION
        - docker images
        - pipe: atlassian/aws-ecr-push-image:1.1.3
          variables:
            AWS_ACCESS_KEY_ID: $AWS_ECR_ACCESS_KEY_ID
            AWS_SECRET_ACCESS_KEY: $AWS_ECR_SECRET_ACCESS_KEY
            AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
            IMAGE_NAME: $AWS_ECR_IMAGE-$ENV
            TAGS: 'latest $IMAGE_TAG_VERSION'
        - envsubst < aws/task-definition-template.json > task-definition.json
        - pipe: atlassian/aws-ecs-deploy:1.1.4
          variables:
            AWS_ACCESS_KEY_ID: $AWS_ECS_ACCESS_KEY_ID
            AWS_SECRET_ACCESS_KEY: $AWS_ECS_SECRET_ACCESS_KEY
            AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
            CLUSTER_NAME: $AWS_CLUSTER_NAME
            SERVICE_NAME: $AWS_ECR_IMAGE-$ENV-service
            TASK_DEFINITION: task-definition.json
options:
  docker: true
image:
  name: atlassian/default-image:2
pipelines:
  default:
  - step:
      name: check build
      image: mcr.microsoft.com/dotnet/core/sdk:3.1
      caches:
          - dotnetcore
      script: 
          - export PROJECT_NAME=Redmap.Events
          - dotnet restore
          - dotnet build Redmap.Events.sln
  branches:
    develop:
      - step: *build-deploy
    master: 
      - step: 
          <<: *build-deploy
          name: uat build & deploy
          deployment: UAT
  tags:
    release-*:
        - step:
            <<: *build-deploy
            name: prod build & deploy
            deployment: PROD